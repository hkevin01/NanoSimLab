{
    // Chat settings
    "chat.tools.autoApprove": true,
    "chat.agent.maxRequests": 100,
    // Python settings
    "python.defaultInterpreterPath": "./.venv/bin/python",
    "python.terminal.activateEnvironment": true,
    "python.analysis.autoImportCompletions": true,
    "python.analysis.typeCheckingMode": "basic",
    "python.linting.enabled": true,
    "python.linting.pylintEnabled": false,
    "python.linting.flake8Enabled": true,
    "python.linting.mypyEnabled": true,
    "python.formatting.provider": "black",
    "python.formatting.blackArgs": [
        "--line-length=100"
    ],
    "python.sortImports.args": [
        "--profile=black",
        "--line-length=100"
    ],
    // Editor settings
    "editor.formatOnSave": true,
    "editor.codeActionsOnSave": {
        "source.organizeImports": true,
        "source.fixAll": true
    },
    "editor.rulers": [
        100
    ],
    "editor.tabSize": 4,
    "editor.insertSpaces": true,
    "editor.trimAutoWhitespace": true,
    "files.trimTrailingWhitespace": true,
    "files.insertFinalNewline": true,
    "files.trimFinalNewlines": true,
    // File associations
    "files.associations": {
        "*.toml": "toml",
        "*.yml": "yaml",
        "*.yaml": "yaml"
    },
    // Naming conventions and standards
    "python.analysis.diagnosticSeverityOverrides": {
        "reportUnusedImport": "warning",
        "reportUnusedFunction": "warning",
        "reportUnusedVariable": "warning",
        "reportDuplicateImport": "error",
        "reportWildcardImportFromLibrary": "error",
        "reportMissingTypeStubs": "none",
        "reportGeneralTypeIssues": "warning",
        "reportOptionalMemberAccess": "warning",
        "reportOptionalSubscript": "warning",
        "reportPrivateImportUsage": "warning"
    },
    // File naming standards
    "files.exclude": {
        "**/__pycache__": true,
        "**/*.pyc": true,
        "**/*.pyo": true,
        "**/*.pyd": true,
        "**/.pytest_cache": true,
        "**/.mypy_cache": true,
        "**/node_modules": true,
        "**/.git": false
    },
    // Java settings (for future Java integration)
    "java.configuration.runtimes": [],
    "java.format.settings.url": "https://raw.githubusercontent.com/google/styleguide/gh-pages/eclipse-java-google-style.xml",
    "java.format.settings.profile": "GoogleStyle",
    "java.codeGeneration.useBlocks": true,
    "java.naming.convention.constantField": "UPPER_SNAKE_CASE",
    "java.naming.convention.field": "camelCase",
    "java.naming.convention.method": "camelCase",
    "java.naming.convention.parameter": "camelCase",
    "java.naming.convention.localVariable": "camelCase",
    "java.naming.convention.type": "PascalCase",
    "java.naming.convention.package": "lowercase",
    // C++ settings (for future C++ integration)
    "C_Cpp.default.cppStandard": "c++17",
    "C_Cpp.default.cStandard": "c11",
    "C_Cpp.default.intelliSenseMode": "linux-gcc-x64",
    "C_Cpp.formatting": "Default",
    "C_Cpp.codeAnalysis.clangTidy.enabled": true,
    "C_Cpp.codeAnalysis.clangTidy.args": [
        "--checks=-*,readability-*,performance-*,modernize-*,google-*"
    ],
    // C++ naming conventions
    "clang-format": {
        "BasedOnStyle": "Google",
        "IndentWidth": 2,
        "TabWidth": 2,
        "UseTab": "Never",
        "ColumnLimit": 100,
        "NamespaceIndentation": "None",
        "AccessModifierOffset": -1,
        "AlignTrailingComments": true,
        "AllowShortFunctionsOnASingleLine": "Inline",
        "AllowShortIfStatementsOnASingleLine": "Never",
        "BinPackParameters": false,
        "BreakBeforeBraces": "Attach"
    },
    // Python naming conventions enforcement
    "python.linting.flake8Args": [
        "--max-line-length=100",
        "--ignore=E203,W503,E501",
        "--select=E,W,F,N,B,C,T",
        "--naming-style=snake_case"
    ],
    // MyPy configuration
    "python.linting.mypyArgs": [
        "--strict",
        "--ignore-missing-imports",
        "--follow-imports=silent",
        "--show-column-numbers",
        "--no-error-summary"
    ],
    // Test configuration
    "python.testing.pytestEnabled": true,
    "python.testing.unittestEnabled": false,
    "python.testing.pytestArgs": [
        "tests",
        "--verbose",
        "--tb=short"
    ],
    // Terminal settings
    "terminal.integrated.env.linux": {
        "PYTHONPATH": "${workspaceFolder}/src"
    },
    "terminal.integrated.env.osx": {
        "PYTHONPATH": "${workspaceFolder}/src"
    },
    "terminal.integrated.env.windows": {
        "PYTHONPATH": "${workspaceFolder}\\src"
    },
    // Jupyter settings
    "jupyter.askForKernelRestart": false,
    "jupyter.interactiveWindow.textEditor.executeSelection": true,
    "jupyter.sendSelectionToInteractiveWindow": true,
    // Extensions settings
    "autoDocstring.docstringFormat": "numpy",
    "autoDocstring.generateDocstringOnEnter": true,
    "autoDocstring.includeExtendedSummary": true,
    "autoDocstring.includeName": false,
    // Git settings
    "git.enableSmartCommit": true,
    "git.confirmSync": false,
    "git.autofetch": true,
    // Search settings
    "search.exclude": {
        "**/node_modules": true,
        "**/bower_components": true,
        "**/*.code-search": true,
        "**/__pycache__": true,
        "**/.pytest_cache": true,
        "**/.mypy_cache": true,
        "**/dist": true,
        "**/build": true,
        "**/.venv": true,
        "**/venv": true
    },
    // Markdown settings
    "markdown.preview.fontSize": 14,
    "markdown.preview.lineHeight": 1.6,
    "[markdown]": {
        "editor.defaultFormatter": "yzhang.markdown-all-in-one",
        "editor.wordWrap": "on",
        "editor.quickSuggestions": false
    },
    // YAML settings
    "[yaml]": {
        "editor.defaultFormatter": "redhat.vscode-yaml",
        "editor.tabSize": 2,
        "editor.insertSpaces": true
    },
    // TOML settings
    "[toml]": {
        "editor.defaultFormatter": "tamasfe.even-better-toml"
    },
    // JSON settings
    "[json]": {
        "editor.defaultFormatter": "vscode.json-language-features"
    },
    "[jsonc]": {
        "editor.defaultFormatter": "vscode.json-language-features"
    }
}
